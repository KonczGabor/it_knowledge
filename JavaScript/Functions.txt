•functions are objects (colletionof name-value pairs)
•but they are linked to Function.prototype(which is linked to Object.prototype)
•they have two additional hidden properties:
•the function's context
•the code that implements it
•they have a prototype property object, which has a property constructor -the code of the function is here
•as they are object, can be stored in variables, objects, arrays, can be passed as arguments, can be returned with, they have methods
•which makes them different: they can be invoked

•name can be used for recursion, but it's optional -anonymusfunctions
•statements executed when the funcitonis invoked
•function literal can appear anywhere, where expression can appear
•function literal can be defined inside functions
•an inner function have access to its parameters and variables and enjoys access to outer function parameters, variables
•it has a link to its outer context, this is called closure

varname = function (parameter, parameter2) {
	// statements
}

function greet (name) {
	alert('Hi ' + name);
}

•if a function stored as a property of an object, it's called method
•when a method is invoked, thisis bound to the containing object
•basically when it's called by refinement, it's called as a method

•if a function is NOT a property of an object, it's invoked as a function
•when the function is invoked, thisis bound to global object :(
•because of it an inner function's thispoints to the wrong object
•closure helps resolving it

•if a function invoked with the new prefix
•new object created with hidden link to the value of function's prototypemember
•and this will be bound to that new object
•convention to name these function with CapitalizedName

•as functions are object, they can have methods
•applymethods takes two parameter
•the object to be bound to this
•array of parameters

•the other bonus parameter of a function is arguments
•it's an array like thing, has a lengthmethod, but lacks of every other array methods
•with it we can reach every argument even those, that were not named
•this can be a solution for variable parameter length