There are three primitive stream classes:
DoubleStream, 
IntStream, 
LongStream.


public static Optional<Double> average(int… scores) {
	if (scores.length == 0) return Optional.empty();
	int sum = 0;
	for (int score: scores) sum += score;
	return Optional.of((double) sum / scores.length);
}

System.out.println(average(90, 100)); // Optional[95.0]
System.out.println(average()); // Optional.empty


Optional<Double> opt = average(90, 100);
if (opt.isPresent())
	System.out.println(opt.get()); // 95.0

	
Optional-t factory-val hozunk létre.	
	
----------
System.out.println(opt.get()); // bad -java.util.NoSuchElementException: No value present
-----------

Egysoros elegáns megoldás:
Optional o = (value== null) ? Optional.empty(): Optional.of(value);
----------------


Optional o = Optional.ofNullable(value);


Method 			When Optional Is Empty 				When Optional Contains a Value

get() 			Throws an exception 				Returns value

ifPresent(Consumer c) 	Does nothing 					Calls Consumer c with value

isPresent() 		Returns false 					Returns true

orElse(T other) 	Returns other parameter 			Returns value

orElseGet(Supplier s) 	Returns result of calling Supplier 		Returns value

orElseThrow(Supplier s) Throws exception createdby calling Supplier	Returns value