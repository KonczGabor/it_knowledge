Az a logolás lényege hogy az összes olyat, ami a trasholdot nem éri el, azt el kell dobni.
Felette lévõt is elkapja.

El kell kérni egy loggert:

Logger logger =  Logger.getLogger(Main.class.getName());

A logger legyen private static final mindig!


Run beállításokba, a VM arguments-ekbe ezt be kell tenni:
Innen ki lehet másolni:
Java\jre1.8.0_111\lib\logging.properties
Ezt:
-Djava.util.logging.config.file=myfile

pl.:
-Djava.util.logging.config.file=logging.properties		//Ilyenkor a gyökérben kell lenni, vagy resources/logging.properties

Csinálni kell egy file handlert is. Deklarálni kell hogy van egy file output-unk. a handlers = után ezt is be kell tenni:
java.util.logging.FileHandler
3 Dolgot kell még megadni:
-Milyen file-ba mentsen
-Milyen formátumban mentsen
-Finomhangolás, hány darabot, milyen szinten.

Ezeket is ki lehet bányászni innen:
Java\jre1.8.0_111\lib\logging.properties

Ezek kellenek:
java.util.logging.FileHandler.level= INFO					//-> Ez a sor így külön nincs benne de így kell használni az adott szintekre.
java.util.logging.FileHandler.pattern = %h/java%u.log     	//-> legyen pl.: test.log
java.util.logging.FileHandler.limit = 50000						
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

Az Eclipse néha nem veszi észre hogy a filerendszerben változás történt(+file), ilyenkor jobbklikk refresh (F5 a projekten akár)


-=SLF4J=-

3 jar-t kell beletenni a classpath-ba:
-slf4j-api.jar
-logback-core.jar
-logback-classic.jar

Csinálunk a projekt mappájában egy lib mappát és oda bemásoljuk a :
slf4j-api-xxx.jar    		//Ez mindenhez kell
slf4j-simple-xxx.jar

Eclipse-ben ki kell jelölni a két jar-t jobbklikk és add to build path. Megjelenik egy új "mappa" referenced libraries, abba is bekerültek.

Csinálunk egy loggert, és ha minden jól megy akkor már az importál látnia kell az org.slf4j.Loggert

main-ben már ki is lehet próbálni:

LOGGER.error("error");

Konfigolás:
classpath-ba bárhova beteszünk egy logbac.xml filet, azt fogja használni a rendszer, ami elõbb benne van.
resources-ba létrehozunk egy logbac.xml-t, abba mondjuk ezt beletesszük: (a nétetet át lehet állítani design és source között)

Ez a logback-es konfig file (a simple-t és a core-t ki kell cserélni a logback simple-és corr-ra és akkor már értelmezve lesz. ):

<configuration scan="true" scanPeriod="3 seconds">
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder><pattern>%d{HH:mm:ss.SSS} %-5level %logger{15} - %msg%n</pattern></encoder>
  </appender>

  <root level="trace">
    <appender-ref ref="STDOUT" />
  </root>  
</configuration>

Add to build path-t csak jar file-ra lehet modnai és azok kerülnek be. Sima config file-ok úgy kerülnek be h 
-betesszük a resource-ba
-vagy az src-be